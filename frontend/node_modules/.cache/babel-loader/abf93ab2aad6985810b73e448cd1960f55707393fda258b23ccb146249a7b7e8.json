{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  subtitles\n}) {\n  _s();\n  const handleTimestampClick = timestamp => {\n    console.log(`Seeking to timestamp: ${timestamp}`);\n  };\n\n  // Initialize the state for selected language\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n\n  // Check if subtitles are available\n  if (!subtitles || Object.keys(subtitles).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Get available languages from subtitles data\n  const languages = Object.keys(subtitles);\n\n  // Set the first language as the default on component mount\n  useEffect(() => {\n    if (languages.length > 0) {\n      setSelectedLanguage(languages[0]);\n    }\n  }, [languages]);\n\n  // Handle language change\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n  };\n\n  // Convert the selected language's subtitles into an array\n  const subtitleArray = Object.entries(subtitles[selectedLanguage] || {}).map(([timestamp, dialogue]) => ({\n    timestamp,\n    dialogue\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"language\",\n        children: \"Select Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"language\",\n        value: selectedLanguage,\n        onChange: handleLanguageChange,\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subtitleArray.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"xMWgAsMv+YSK07+xxWSacm/5ADc=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Subtitle","subtitles","_s","handleTimestampClick","timestamp","console","log","selectedLanguage","setSelectedLanguage","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","languages","handleLanguageChange","event","target","value","subtitleArray","entries","map","dialogue","className","htmlFor","id","onChange","language","subtitle","index","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Subtitle({ subtitles }) {\n    const handleTimestampClick = (timestamp) => {\n        console.log(`Seeking to timestamp: ${timestamp}`);\n    };\n\n    // Initialize the state for selected language\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    \n    // Check if subtitles are available\n    if (!subtitles || Object.keys(subtitles).length === 0) {\n        return <div>No subtitles available.</div>;\n    }\n\n    // Get available languages from subtitles data\n    const languages = Object.keys(subtitles);\n\n    // Set the first language as the default on component mount\n    useEffect(() => {\n        if (languages.length > 0) {\n            setSelectedLanguage(languages[0]);\n        }\n    }, [languages]);\n\n    // Handle language change\n    const handleLanguageChange = (event) => {\n        setSelectedLanguage(event.target.value);\n    };\n\n    // Convert the selected language's subtitles into an array\n    const subtitleArray = Object.entries(subtitles[selectedLanguage] || {}).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue\n    }));\n\n    return (\n        <div className=\"subtitle\">\n            <div className=\"language-selector\">\n                <label htmlFor=\"language\">Select Language:</label>\n                <select id=\"language\" value={selectedLanguage} onChange={handleLanguageChange}>\n                    {languages.map((language) => (\n                        <option key={language} value={language}>\n                            {language}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            <ul>\n                {subtitleArray.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}