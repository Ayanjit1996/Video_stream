{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Main from './main';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables\n  const [enable, setEnable] = useState(false);\n  const [isOpen, setOpen] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [uploader, setUploader] = useState(\"\");\n  const [latestList, setLatestList] = useState([]); // Initialize as an empty array\n  const [selectedVideoID, setSelectedVideoID] = useState(null);\n  const [title, setTitle] = useState(\"\"); // Initialize as an empty string\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [sub, setSub] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      enable: enable,\n      setEnable: setEnable,\n      isOpen: isOpen,\n      setOpen: setOpen,\n      videoFile: videoFile,\n      setVideoFile: setVideoFile,\n      uploader: uploader,\n      setUploader: setUploader,\n      latestList: latestList,\n      setLatestList: setLatestList,\n      selectedVideoID: selectedVideoID,\n      setSelectedVideoID: setSelectedVideoID,\n      title: title,\n      setTitle: setTitle,\n      uploadSuccess: uploadSuccess,\n      setUploadSuccess: setUploadSuccess,\n      sub: sub,\n      setSub: setSub,\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QdBc1x4ky17aVzeCckdLzfH1+6c=\");\n_c = App;\nexport default App;\n\n// import Vid from './video_section';\n// import Search from './search';\n// import Vid_list from './vid_list';\n// import Subtitle from './subtitle_section';\n// import Navbar from './Navbar';\n\n// import Upload_window from './upload_window'; \n// import axios from 'axios';\n// // Handlers\n// const handleClose = () => {\n//   setOpen(false);\n//   setTimeout(() => {\n//     setEnable(false);\n//     setVideoFile(null);\n//     setUploader(\"\");\n//   }, 500);\n// };\n\n// const updateUploader = (e) => {\n//   setUploader(e.target.value);\n// };\n\n// const handleFileChange = (event) => {\n//   setVideoFile(event.target.files[0]);\n// };\n\n// // Fetch latest video list\n// const fetchList = async () => {\n//   try {\n//     const response = await axios.get('http://localhost:8000/');\n//     setLatestList(response.data);\n//   } catch (error) {\n//     console.error(\"Error fetching video list:\", error);\n//   }\n// };\n\n// // Effect hooks\n// useEffect(() => {\n//   fetchList();\n// }, []);\n\n// useEffect(() => {\n//   if (Uploadsuccess) {\n//     fetchList();\n//     setUploadsuccess(false);\n//   }\n// }, [Uploadsuccess]);\n\n// return (\n//   <div className=\"App\">\n//     <div className=\"navbar_div\">\n//       <Navbar setEnable={setEnable} setOpen={setOpen} />\n//     </div>\n//     <div className='body'>\n//       <div className=\"left-part\">\n//         <Vid selectedVideoID={selectedVideoID} Title={Title} setSub={setSub} />\n//         {selectedVideoID && <Search setSerachTerm={setSerachTerm} />}\n//         <Subtitle sub={sub} SerachTerm={SerachTerm} selectedVideoID={selectedVideoID} />\n//       </div>\n//       <div className=\"right-part\">\n//         <Vid_list \n//           latest_list={latest_list} \n//           setSelectedVideoID={setSelectedVideoID} \n//           setTitle={setTitle} \n//           setUploadsuccess={setUploadsuccess} \n//         />\n//       </div>\n//     </div>\n//     {enable && (\n//       <Upload_window \n//         isOpen={isOpen} \n//         uploader={uploader} \n//         videoFile={videoFile} \n//         handleFileChange={handleFileChange} \n//         handleClose={handleClose} \n//         updateUploader={updateUploader} \n//         setUploadsuccess={setUploadsuccess} \n//       />\n//     )}\n//   </div>\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Main","useState","jsxDEV","_jsxDEV","App","_s","enable","setEnable","isOpen","setOpen","videoFile","setVideoFile","uploader","setUploader","latestList","setLatestList","selectedVideoID","setSelectedVideoID","title","setTitle","uploadSuccess","setUploadSuccess","sub","setSub","searchTerm","setSearchTerm","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/App.js"],"sourcesContent":["import './App.css';    \nimport Main from './main';\nimport { useState } from 'react';\n\nfunction App() {\n  // State variables\n  const [enable, setEnable] = useState(false);\n  const [isOpen, setOpen] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [uploader, setUploader] = useState(\"\");\n  const [latestList, setLatestList] = useState([]); // Initialize as an empty array\n  const [selectedVideoID, setSelectedVideoID] = useState(null);\n  const [title, setTitle] = useState(\"\"); // Initialize as an empty string\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [sub, setSub] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <div>\n      <Main\n        enable={enable}\n        setEnable={setEnable}\n        isOpen={isOpen}\n        setOpen={setOpen}\n        videoFile={videoFile}\n        setVideoFile={setVideoFile}\n        uploader={uploader}\n        setUploader={setUploader}\n        latestList={latestList}\n        setLatestList={setLatestList}\n        selectedVideoID={selectedVideoID}\n        setSelectedVideoID={setSelectedVideoID}\n        title={title} \n        setTitle={setTitle}\n        uploadSuccess={uploadSuccess}\n        setUploadSuccess={setUploadSuccess}\n        sub={sub}\n        setSub={setSub}\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n// import Vid from './video_section';\n// import Search from './search';\n// import Vid_list from './vid_list';\n// import Subtitle from './subtitle_section';\n// import Navbar from './Navbar';\n\n// import Upload_window from './upload_window'; \n// import axios from 'axios';\n// // Handlers\n  // const handleClose = () => {\n  //   setOpen(false);\n  //   setTimeout(() => {\n  //     setEnable(false);\n  //     setVideoFile(null);\n  //     setUploader(\"\");\n  //   }, 500);\n  // };\n\n  // const updateUploader = (e) => {\n  //   setUploader(e.target.value);\n  // };\n\n  // const handleFileChange = (event) => {\n  //   setVideoFile(event.target.files[0]);\n  // };\n\n  // // Fetch latest video list\n  // const fetchList = async () => {\n  //   try {\n  //     const response = await axios.get('http://localhost:8000/');\n  //     setLatestList(response.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching video list:\", error);\n  //   }\n  // };\n\n  // // Effect hooks\n  // useEffect(() => {\n  //   fetchList();\n  // }, []);\n\n  // useEffect(() => {\n  //   if (Uploadsuccess) {\n  //     fetchList();\n  //     setUploadsuccess(false);\n  //   }\n  // }, [Uploadsuccess]);\n\n  // return (\n  //   <div className=\"App\">\n  //     <div className=\"navbar_div\">\n  //       <Navbar setEnable={setEnable} setOpen={setOpen} />\n  //     </div>\n  //     <div className='body'>\n  //       <div className=\"left-part\">\n  //         <Vid selectedVideoID={selectedVideoID} Title={Title} setSub={setSub} />\n  //         {selectedVideoID && <Search setSerachTerm={setSerachTerm} />}\n  //         <Subtitle sub={sub} SerachTerm={SerachTerm} selectedVideoID={selectedVideoID} />\n  //       </div>\n  //       <div className=\"right-part\">\n  //         <Vid_list \n  //           latest_list={latest_list} \n  //           setSelectedVideoID={setSelectedVideoID} \n  //           setTitle={setTitle} \n  //           setUploadsuccess={setUploadsuccess} \n  //         />\n  //       </div>\n  //     </div>\n  //     {enable && (\n  //       <Upload_window \n  //         isOpen={isOpen} \n  //         uploader={uploader} \n  //         videoFile={videoFile} \n  //         handleFileChange={handleFileChange} \n  //         handleClose={handleClose} \n  //         updateUploader={updateUploader} \n  //         setUploadsuccess={setUploadsuccess} \n  //       />\n  //     )}\n  //   </div>"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACO,MAAM,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqB,GAAG,EAAEC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEhD,oBACEE,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACH,IAAI;MACHM,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,MAAM,EAAEA,MAAO;MACfC,OAAO,EAAEA,OAAQ;MACjBC,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBC,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BC,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA,kBAAmB;MACvCC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEA,aAAc;MAC7BC,gBAAgB,EAAEA,gBAAiB;MACnCC,GAAG,EAAEA,GAAI;MACTC,MAAM,EAAEA,MAAO;MACfC,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAvCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAyCZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}