{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub\n}) {\n  _s();\n  const [parsedSubtitles, setParsedSubtitles] = useState([]);\n  useEffect(() => {\n    // Function to parse subtitle text\n    const parseSubtitles = sub => {\n      const subtitleList = [];\n      const regex = /(\\d{2}:\\d{2}.\\d{3}) --> \\d{2}:\\d{2}.\\d{3} (.+)/g;\n      let match;\n      while ((match = regex.exec(sub)) !== null) {\n        const timestamp = match[1];\n        const dialogue = match[2];\n        subtitleList.push({\n          timestamp,\n          dialogue\n        });\n      }\n      return subtitleList;\n    };\n\n    // Parse and store subtitles\n    const parsed = parseSubtitles(subtitleText);\n    setParsedSubtitles(parsed);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialogue\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"timestamp\",\n        href: \"#\",\n        children: subtitle.timestamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 35\n      }, this), \" \\xA0\\xA0\\u2022 \", subtitle.dialogue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialogue\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"timestamp\",\n        href: \"#\",\n        children: subtitle.timestamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 43\n      }, this), \" \\u2022 \", subtitle.dialogue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"Hr94gH5Tgy5q0gI73fSvaqvGmF4=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["Subtitle","sub","_s","parsedSubtitles","setParsedSubtitles","useState","useEffect","parseSubtitles","subtitleList","regex","match","exec","timestamp","dialogue","push","parsed","subtitleText","_jsxDEV","className","children","id","href","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["    function Subtitle({ sub }) {\n    const [parsedSubtitles, setParsedSubtitles] = useState([]);\n\n    useEffect(() => {\n        // Function to parse subtitle text\n        const parseSubtitles = (sub) => {\n        const subtitleList = [];\n        const regex = /(\\d{2}:\\d{2}.\\d{3}) --> \\d{2}:\\d{2}.\\d{3} (.+)/g;\n        let match;\n\n        while ((match = regex.exec(sub)) !== null) {\n            const timestamp = match[1];\n            const dialogue = match[2];\n            subtitleList.push({ timestamp, dialogue });\n        }\n\n        return subtitleList;\n        };\n\n        // Parse and store subtitles\n        const parsed = parseSubtitles(subtitleText);\n        setParsedSubtitles(parsed);\n    }, []);\n    return (\n        <div className=\"subtitle\">\n        <div className=\"dialogue\"><a id=\"timestamp\" href=\"#\">{subtitle.timestamp}</a> &nbsp;&nbsp;• {subtitle.dialogue}</div>\n                <div className=\"dialogue\"><a id=\"timestamp\" href=\"#\">{subtitle.timestamp}</a> • {subtitle.dialogue}</div>\n        {/* <div className=\"dialogue\">{sub}</div> */}\n        </div>\n    );\n    }\n\n    export default Subtitle;\n"],"mappings":";;;AAAI,SAASA,QAAQA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMC,cAAc,GAAIN,GAAG,IAAK;MAChC,MAAMO,YAAY,GAAG,EAAE;MACvB,MAAMC,KAAK,GAAG,iDAAiD;MAC/D,IAAIC,KAAK;MAET,OAAO,CAACA,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACV,GAAG,CAAC,MAAM,IAAI,EAAE;QACvC,MAAMW,SAAS,GAAGF,KAAK,CAAC,CAAC,CAAC;QAC1B,MAAMG,QAAQ,GAAGH,KAAK,CAAC,CAAC,CAAC;QACzBF,YAAY,CAACM,IAAI,CAAC;UAAEF,SAAS;UAAEC;QAAS,CAAC,CAAC;MAC9C;MAEA,OAAOL,YAAY;IACnB,CAAC;;IAED;IACA,MAAMO,MAAM,GAAGR,cAAc,CAACS,YAAY,CAAC;IAC3CZ,kBAAkB,CAACW,MAAM,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EACN,oBACIE,OAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACzBF,OAAA;MAAKC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAACF,OAAA;QAAGG,EAAE,EAAC,WAAW;QAACC,IAAI,EAAC,GAAG;QAAAF,QAAA,EAAEG,QAAQ,CAACV;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,oBAAe,EAACJ,QAAQ,CAACT,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7GT,OAAA;MAAKC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAACF,OAAA;QAAGG,EAAE,EAAC,WAAW;QAACC,IAAI,EAAC,GAAG;QAAAF,QAAA,EAAEG,QAAQ,CAACV;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,YAAG,EAACJ,QAAQ,CAACT,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5G,CAAC;AAEV;AAACxB,EAAA,CA9BQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}