{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub,\n  SerachTerm\n}) {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const [subtitleArray, setSubtitleArray] = useState([]);\n  const [filteredSubtitles, setFilteredSubtitles] = useState([]);\n  useEffect(() => {\n    if (sub && Object.keys(sub).length > 0) {\n      // Set the first available language by default\n      const firstLanguage = Object.keys(sub)[0];\n      setSelectedLanguage(firstLanguage);\n    }\n  }, [sub]);\n  useEffect(() => {\n    if (selectedLanguage && sub[selectedLanguage]) {\n      const subtitles = sub[selectedLanguage];\n      const newSubtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue\n      }));\n      setSubtitleArray(newSubtitleArray);\n      setFilteredSubtitles(newSubtitleArray); // Initialize filtered subtitles with all\n    }\n  }, [selectedLanguage, sub]);\n  useEffect(() => {\n    if (SerachTerm) {\n      const filtered = subtitleArray.filter(subtitle => subtitle.dialogue.toLowerCase().includes(SerachTerm.toLowerCase()));\n      setFilteredSubtitles(filtered);\n    } else {\n      setFilteredSubtitles(subtitleArray); // Show all when search term is empty\n    }\n  }, [SerachTerm, subtitleArray]);\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n  };\n  const handleTimestampClick = timestamp => {\n    console.log(`Seeking to timestamp: ${timestamp}`);\n    // Add your logic to seek video to the specified timestamp here\n  };\n  if (!sub || typeof sub !== 'object' || Object.keys(sub).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"selector\",\n      value: selectedLanguage,\n      onChange: handleLanguageChange,\n      children: Object.keys(sub).map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language,\n        children: language\n      }, language, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredSubtitles.length > 0 ? filteredSubtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialogue\",\n            children: [\"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No matching dialogues found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"0GveUukyegLXMUrFfDD9O+p71OY=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Subtitle","sub","SerachTerm","_s","selectedLanguage","setSelectedLanguage","subtitleArray","setSubtitleArray","filteredSubtitles","setFilteredSubtitles","Object","keys","length","firstLanguage","subtitles","newSubtitleArray","entries","map","timestamp","dialogue","filtered","filter","subtitle","toLowerCase","includes","handleLanguageChange","event","target","value","handleTimestampClick","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","language","index","id","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Subtitle({ sub, SerachTerm }) {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const [subtitleArray, setSubtitleArray] = useState([]);\n    const [filteredSubtitles, setFilteredSubtitles] = useState([]);\n\n    useEffect(() => {\n        if (sub && Object.keys(sub).length > 0) {\n            // Set the first available language by default\n            const firstLanguage = Object.keys(sub)[0];\n            setSelectedLanguage(firstLanguage);\n        }\n    }, [sub]);\n\n    useEffect(() => {\n        if (selectedLanguage && sub[selectedLanguage]) {\n            const subtitles = sub[selectedLanguage];\n            const newSubtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n                timestamp,\n                dialogue\n            }));\n            setSubtitleArray(newSubtitleArray);\n            setFilteredSubtitles(newSubtitleArray); // Initialize filtered subtitles with all\n        }\n    }, [selectedLanguage, sub]);\n\n    useEffect(() => {\n        if (SerachTerm) {\n            const filtered = subtitleArray.filter(subtitle => \n                subtitle.dialogue.toLowerCase().includes(SerachTerm.toLowerCase())\n            );\n            setFilteredSubtitles(filtered);\n        } else {\n            setFilteredSubtitles(subtitleArray); // Show all when search term is empty\n        }\n    }, [SerachTerm, subtitleArray]);\n\n    const handleLanguageChange = (event) => {\n        setSelectedLanguage(event.target.value);\n    };\n\n    const handleTimestampClick = (timestamp) => {\n        console.log(`Seeking to timestamp: ${timestamp}`);\n        // Add your logic to seek video to the specified timestamp here\n    };\n\n    if (!sub || typeof sub !== 'object' || Object.keys(sub).length === 0) {\n        return <div>No subtitles available.</div>;\n    }\n\n    return (\n        <div className=\"subtitle\">\n            <select className=\"selector\" value={selectedLanguage} onChange={handleLanguageChange}>\n                {Object.keys(sub).map((language) => (\n                    <option key={language} value={language}>\n                        {language}\n                    </option>\n                ))}\n            </select>\n            <ul>\n                {filteredSubtitles.length > 0 ? filteredSubtitles.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            <div className=\"dialogue\">\n                                &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                            </div>\n                        </div>\n                    </li>\n                )) : (\n                    <li>No matching dialogues found.</li>\n                )}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC,GAAG;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZ,IAAII,GAAG,IAAIS,MAAM,CAACC,IAAI,CAACV,GAAG,CAAC,CAACW,MAAM,GAAG,CAAC,EAAE;MACpC;MACA,MAAMC,aAAa,GAAGH,MAAM,CAACC,IAAI,CAACV,GAAG,CAAC,CAAC,CAAC,CAAC;MACzCI,mBAAmB,CAACQ,aAAa,CAAC;IACtC;EACJ,CAAC,EAAE,CAACZ,GAAG,CAAC,CAAC;EAETJ,SAAS,CAAC,MAAM;IACZ,IAAIO,gBAAgB,IAAIH,GAAG,CAACG,gBAAgB,CAAC,EAAE;MAC3C,MAAMU,SAAS,GAAGb,GAAG,CAACG,gBAAgB,CAAC;MACvC,MAAMW,gBAAgB,GAAGL,MAAM,CAACM,OAAO,CAACF,SAAS,CAAC,CAACG,GAAG,CAAC,CAAC,CAACC,SAAS,EAAEC,QAAQ,CAAC,MAAM;QAC/ED,SAAS;QACTC;MACJ,CAAC,CAAC,CAAC;MACHZ,gBAAgB,CAACQ,gBAAgB,CAAC;MAClCN,oBAAoB,CAACM,gBAAgB,CAAC,CAAC,CAAC;IAC5C;EACJ,CAAC,EAAE,CAACX,gBAAgB,EAAEH,GAAG,CAAC,CAAC;EAE3BJ,SAAS,CAAC,MAAM;IACZ,IAAIK,UAAU,EAAE;MACZ,MAAMkB,QAAQ,GAAGd,aAAa,CAACe,MAAM,CAACC,QAAQ,IAC1CA,QAAQ,CAACH,QAAQ,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CACrE,CAAC;MACDd,oBAAoB,CAACW,QAAQ,CAAC;IAClC,CAAC,MAAM;MACHX,oBAAoB,CAACH,aAAa,CAAC,CAAC,CAAC;IACzC;EACJ,CAAC,EAAE,CAACJ,UAAU,EAAEI,aAAa,CAAC,CAAC;EAE/B,MAAMmB,oBAAoB,GAAIC,KAAK,IAAK;IACpCrB,mBAAmB,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3C,CAAC;EAED,MAAMC,oBAAoB,GAAIX,SAAS,IAAK;IACxCY,OAAO,CAACC,GAAG,CAAC,yBAAyBb,SAAS,EAAE,CAAC;IACjD;EACJ,CAAC;EAED,IAAI,CAACjB,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIS,MAAM,CAACC,IAAI,CAACV,GAAG,CAAC,CAACW,MAAM,KAAK,CAAC,EAAE;IAClE,oBAAOb,OAAA;MAAAiC,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7C;EAEA,oBACIrC,OAAA;IAAKsC,SAAS,EAAC,UAAU;IAAAL,QAAA,gBACrBjC,OAAA;MAAQsC,SAAS,EAAC,UAAU;MAACT,KAAK,EAAExB,gBAAiB;MAACkC,QAAQ,EAAEb,oBAAqB;MAAAO,QAAA,EAChFtB,MAAM,CAACC,IAAI,CAACV,GAAG,CAAC,CAACgB,GAAG,CAAEsB,QAAQ,iBAC3BxC,OAAA;QAAuB6B,KAAK,EAAEW,QAAS;QAAAP,QAAA,EAClCO;MAAQ,GADAA,QAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTrC,OAAA;MAAAiC,QAAA,EACKxB,iBAAiB,CAACI,MAAM,GAAG,CAAC,GAAGJ,iBAAiB,CAACS,GAAG,CAAC,CAACK,QAAQ,EAAEkB,KAAK,kBAClEzC,OAAA;QAAAiC,QAAA,eACIjC,OAAA;UAAKsC,SAAS,EAAC,UAAU;UAAAL,QAAA,gBACrBjC,OAAA;YACI0C,EAAE,EAAC,WAAW;YACdC,IAAI,EAAC,GAAG;YACRC,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAACP,QAAQ,CAACJ,SAAS,CAAE;YAAAc,QAAA,EACvDV,QAAQ,CAACJ;UAAS;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,EAAC,GAAG,eACRrC,OAAA;YAAKsC,SAAS,EAAC,UAAU;YAAAL,QAAA,GAAC,iBACR,EAACV,QAAQ,CAACH,QAAQ;UAAA;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GAXDI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CACP,CAAC,gBACErC,OAAA;QAAAiC,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACjC,EAAA,CA/EQH,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAiFjB,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}