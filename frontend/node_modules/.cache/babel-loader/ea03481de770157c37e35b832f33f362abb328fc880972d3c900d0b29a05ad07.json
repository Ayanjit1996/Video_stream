{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub,\n  SerachTerm,\n  selectedVideoID,\n  setSeconds\n}) {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  const [subtitleArray, setSubtitleArray] = useState([]);\n  const [filteredSubtitles, setFilteredSubtitles] = useState([]);\n  useEffect(() => {\n    if (sub && Object.keys(sub).length > 0) {\n      const firstLanguage = Object.keys(sub)[0];\n      setSelectedLanguage(firstLanguage);\n    }\n  }, [sub]);\n  useEffect(() => {\n    if (selectedLanguage && sub[selectedLanguage]) {\n      const subtitles = sub[selectedLanguage];\n      const newSubtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue,\n        language: selectedLanguage\n      }));\n      setSubtitleArray(newSubtitleArray);\n      setFilteredSubtitles(newSubtitleArray);\n    }\n  }, [selectedLanguage, sub]);\n  useEffect(() => {\n    if (SerachTerm) {\n      const allSubtitles = Object.keys(sub).flatMap(lang => Object.entries(sub[lang]).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue,\n        language: lang\n      })));\n      const filtered = allSubtitles.filter(subtitle => subtitle.dialogue.toLowerCase().includes(SerachTerm.toLowerCase()));\n      setFilteredSubtitles(filtered);\n    } else {\n      setFilteredSubtitles(subtitleArray);\n    }\n  }, [SerachTerm, subtitleArray, sub]);\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n  };\n  const handleTimestampClick = async timestamp => {\n    console.log(`Seeking to timestamp: ${timestamp}`);\n    console.log(selectedVideoID);\n    try {\n      // Find the video element\n      const videoElement = document.querySelector('video');\n      if (videoElement) {\n        // Convert timestamp to seconds (assuming the timestamp is in HH:MM:SS format)\n        const timeParts = timestamp.split(':');\n        const seconds = +timeParts[0] * 60 * 60 + +timeParts[1] * 60 + +timeParts[2];\n        setSeconds(seconds);\n      }\n    } catch (error) {\n      console.error(\"Error seeking video:\", error);\n    }\n  };\n  if (!sub || typeof sub !== 'object' || Object.keys(sub).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"selector\",\n      value: selectedLanguage,\n      onChange: handleLanguageChange,\n      children: Object.keys(sub).map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language,\n        children: language\n      }, language, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredSubtitles.length > 0 ? filteredSubtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\xA0\\xA0\\u2022 \", subtitle.dialogue, \" (\", subtitle.language, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No matching dialogues found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"0GveUukyegLXMUrFfDD9O+p71OY=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Subtitle","sub","SerachTerm","selectedVideoID","setSeconds","_s","selectedLanguage","setSelectedLanguage","subtitleArray","setSubtitleArray","filteredSubtitles","setFilteredSubtitles","Object","keys","length","firstLanguage","subtitles","newSubtitleArray","entries","map","timestamp","dialogue","language","allSubtitles","flatMap","lang","filtered","filter","subtitle","toLowerCase","includes","handleLanguageChange","event","target","value","handleTimestampClick","console","log","videoElement","document","querySelector","timeParts","split","seconds","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","index","id","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Subtitle({ sub, SerachTerm, selectedVideoID , setSeconds}) {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const [subtitleArray, setSubtitleArray] = useState([]);\n    const [filteredSubtitles, setFilteredSubtitles] = useState([]);\n\n    useEffect(() => {\n        if (sub && Object.keys(sub).length > 0) {\n            const firstLanguage = Object.keys(sub)[0];\n            setSelectedLanguage(firstLanguage);\n        }\n    }, [sub]);\n\n    useEffect(() => {\n        if (selectedLanguage && sub[selectedLanguage]) {\n            const subtitles = sub[selectedLanguage];\n            const newSubtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n                timestamp,\n                dialogue,\n                language: selectedLanguage\n            }));\n            setSubtitleArray(newSubtitleArray);\n            setFilteredSubtitles(newSubtitleArray);\n        }\n    }, [selectedLanguage, sub]);\n\n    useEffect(() => {\n        if (SerachTerm) {\n            const allSubtitles = Object.keys(sub).flatMap(lang => \n                Object.entries(sub[lang]).map(([timestamp, dialogue]) => ({\n                    timestamp,\n                    dialogue,\n                    language: lang\n                }))\n            );\n\n            const filtered = allSubtitles.filter(subtitle => \n                subtitle.dialogue.toLowerCase().includes(SerachTerm.toLowerCase())\n            );\n            setFilteredSubtitles(filtered);\n        } else {\n            setFilteredSubtitles(subtitleArray);\n        }\n    }, [SerachTerm, subtitleArray, sub]);\n\n    const handleLanguageChange = (event) => {\n        setSelectedLanguage(event.target.value);\n    };\n\n    const handleTimestampClick = async (timestamp) => {\n        console.log(`Seeking to timestamp: ${timestamp}`);\n        console.log(selectedVideoID);\n\n        try {\n            // Find the video element\n            const videoElement = document.querySelector('video');\n    \n            if (videoElement) {\n                // Convert timestamp to seconds (assuming the timestamp is in HH:MM:SS format)\n                const timeParts = timestamp.split(':');\n                const seconds = (+timeParts[0] * 60 * 60) + (+timeParts[1] * 60) + (+timeParts[2]);\n                setSeconds(seconds)\n            }\n        } catch (error) {\n            console.error(\"Error seeking video:\", error);\n        }\n    };\n\n    if (!sub || typeof sub !== 'object' || Object.keys(sub).length === 0) {\n        return <div>No subtitles available.</div>;\n    }\n\n    return (\n        <div className=\"subtitle\">\n            <select className=\"selector\" value={selectedLanguage} onChange={handleLanguageChange}>\n                {Object.keys(sub).map((language) => (\n                    <option key={language} value={language}>\n                        {language}\n                    </option>\n                ))}\n            </select>\n            <ul>\n                {filteredSubtitles.length > 0 ? filteredSubtitles.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            <div>\n                                &nbsp;&nbsp;â€¢ {subtitle.dialogue} ({subtitle.language})\n                            </div>\n                        </div>\n                    </li>\n                )) : (\n                    <li>No matching dialogues found.</li>\n                )}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}