{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  subs\n}) {\n  _s();\n  // Check if subs is valid before proceeding\n  if (!subs || typeof subs !== 'object' || Object.keys(subs).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n  const [selectedLanguage, setSelectedLanguage] = useState(Object.keys(subs)[0]);\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n  };\n  const handleTimestampClick = timestamp => {\n    // Logic to seek video to the specified timestamp\n    console.log(`Seeking to timestamp: ${timestamp}`);\n  };\n\n  // Get the subtitles for the selected language\n  const subtitles = subs[selectedLanguage] || {};\n  const subtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n    timestamp,\n    dialogue\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedLanguage,\n      onChange: handleLanguageChange,\n      children: Object.keys(subs).map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language,\n        children: language\n      }, language, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subtitleArray.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"7CtnwebskIgsAVOa9Q7XkatttYY=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Subtitle","subs","_s","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedLanguage","setSelectedLanguage","handleLanguageChange","event","target","value","handleTimestampClick","timestamp","console","log","subtitles","subtitleArray","entries","map","dialogue","className","onChange","language","subtitle","index","id","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Subtitle({ subs }) {\n    // Check if subs is valid before proceeding\n    if (!subs || typeof subs !== 'object' || Object.keys(subs).length === 0) {\n        return <div>No subtitles available.</div>;\n    }\n\n    const [selectedLanguage, setSelectedLanguage] = useState(Object.keys(subs)[0]);\n\n    const handleLanguageChange = (event) => {\n        setSelectedLanguage(event.target.value);\n    };\n\n    const handleTimestampClick = (timestamp) => {\n        // Logic to seek video to the specified timestamp\n        console.log(`Seeking to timestamp: ${timestamp}`);\n    };\n\n    // Get the subtitles for the selected language\n    const subtitles = subs[selectedLanguage] || {};\n\n    const subtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue\n    }));\n\n    return (\n        <div className=\"subtitle\">\n            <select value={selectedLanguage} onChange={handleLanguageChange}>\n                {Object.keys(subs).map((language) => (\n                    <option key={language} value={language}>\n                        {language}\n                    </option>\n                ))}\n            </select>\n            <ul>\n                {subtitleArray.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}