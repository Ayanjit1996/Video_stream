{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vid({\n  selectedVideoID,\n  Title\n}) {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [subtitles, setSubtitles] = useState([]);\n  const displayTitle = Title || \"None selected\";\n  useEffect(() => {\n    const fetchVideoData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/play/${selectedVideoID}/`);\n        setSelectedVideo(response.data.video_url);\n\n        // Set subtitle URLs from the response\n        const subtitleTracks = response.data.subtitles.map(subtitle => ({\n          language: subtitle.language,\n          subtitle_file_url: subtitle.subtitle_file_url // Use the direct URL for .srt file\n        }));\n        setSubtitles(subtitleTracks);\n      } catch (error) {\n        console.error(\"Error fetching video data:\", error);\n      }\n    };\n    if (selectedVideoID) {\n      fetchVideoData();\n    }\n  }, [selectedVideoID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_vid\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"title-playing\",\n      children: displayTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play_area me-2\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"play_area\",\n        width: \"1000\",\n        height: \"500\",\n        controls: true,\n        children: [selectedVideo && /*#__PURE__*/_jsxDEV(\"source\", {\n          src: selectedVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this), subtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"track\", {\n          src: subtitle.subtitle_file_url,\n          label: subtitle.language,\n          kind: \"subtitles\",\n          srcLang: subtitle.language,\n          default: index === 0 // Make the first track the default one\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Vid, \"sHodV4rzQ/5cKvjiwCHyzLVxZK8=\");\n_c = Vid;\nexport default Vid;\nvar _c;\n$RefreshReg$(_c, \"Vid\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Vid","selectedVideoID","Title","_s","selectedVideo","setSelectedVideo","subtitles","setSubtitles","displayTitle","fetchVideoData","response","get","data","video_url","subtitleTracks","map","subtitle","language","subtitle_file_url","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","controls","src","type","index","label","kind","srcLang","default","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx"],"sourcesContent":["    import React, { useState, useEffect } from \"react\";\n    import axios from \"axios\";\n\n    function Vid({ selectedVideoID, Title }) {\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [subtitles, setSubtitles] = useState([]);\n    const displayTitle = Title || \"None selected\";\n\n    useEffect(() => {\n        const fetchVideoData = async () => {\n        try {\n            const response = await axios.get(`http://localhost:8000/play/${selectedVideoID}/`);\n            setSelectedVideo(response.data.video_url);\n\n            // Set subtitle URLs from the response\n            const subtitleTracks = response.data.subtitles.map((subtitle) => ({\n            language: subtitle.language,\n            subtitle_file_url: subtitle.subtitle_file_url, // Use the direct URL for .srt file\n            }));\n\n            setSubtitles(subtitleTracks);\n        } catch (error) {\n            console.error(\"Error fetching video data:\", error);\n        }\n        };\n\n        if (selectedVideoID) {\n        fetchVideoData();\n        }\n    }, [selectedVideoID]);\n\n    return (\n        <div className=\"main_vid\">\n        <header className=\"title-playing\">{displayTitle}</header>\n        <div className=\"play_area me-2\">\n            <video className=\"play_area\" width=\"1000\" height=\"500\" controls>\n            {selectedVideo && <source src={selectedVideo} type=\"video/mp4\" />}\n            {subtitles.map((subtitle, index) => (\n                <track\n                key={index}\n                src={subtitle.subtitle_file_url}\n                label={subtitle.language}\n                kind=\"subtitles\"\n                srcLang={subtitle.language}\n                default={index === 0}  // Make the first track the default one\n                />\n            ))}\n            Your browser does not support the video tag.\n            </video>\n        </div>\n        </div>\n    );\n    }\n\n    export default Vid;"],"mappings":";;AAAI,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,YAAY,GAAGN,KAAK,IAAI,eAAe;EAE7CN,SAAS,CAAC,MAAM;IACZ,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,8BAA8BV,eAAe,GAAG,CAAC;QAClFI,gBAAgB,CAACK,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;;QAEzC;QACA,MAAMC,cAAc,GAAGJ,QAAQ,CAACE,IAAI,CAACN,SAAS,CAACS,GAAG,CAAEC,QAAQ,KAAM;UAClEC,QAAQ,EAAED,QAAQ,CAACC,QAAQ;UAC3BC,iBAAiB,EAAEF,QAAQ,CAACE,iBAAiB,CAAE;QAC/C,CAAC,CAAC,CAAC;QAEHX,YAAY,CAACO,cAAc,CAAC;MAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACA,CAAC;IAED,IAAIlB,eAAe,EAAE;MACrBQ,cAAc,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErB,oBACIF,OAAA;IAAKsB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACzBvB,OAAA;MAAQsB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEd;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACzD3B,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BvB,OAAA;QAAOsB,SAAS,EAAC,WAAW;QAACM,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,KAAK;QAACC,QAAQ;QAAAP,QAAA,GAC9DlB,aAAa,iBAAIL,OAAA;UAAQ+B,GAAG,EAAE1B,aAAc;UAAC2B,IAAI,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAChEpB,SAAS,CAACS,GAAG,CAAC,CAACC,QAAQ,EAAEgB,KAAK,kBAC3BjC,OAAA;UAEA+B,GAAG,EAAEd,QAAQ,CAACE,iBAAkB;UAChCe,KAAK,EAAEjB,QAAQ,CAACC,QAAS;UACzBiB,IAAI,EAAC,WAAW;UAChBC,OAAO,EAAEnB,QAAQ,CAACC,QAAS;UAC3BmB,OAAO,EAAEJ,KAAK,KAAK,CAAE,CAAE;QAAA,GALlBA,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMT,CACJ,CAAC,EAAC,8CAEH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACvB,EAAA,CAjDQH,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}