{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vid({\n  selectedVideo,\n  subtitles,\n  title\n}) {\n  _s();\n  const [subtitleBlobs, setSubtitleBlobs] = useState([]);\n  useEffect(() => {\n    if (subtitles) {\n      const blobs = subtitles.map(subtitle => {\n        // Decode Base64 to binary data\n        const byteCharacters = atob(subtitle.subtitle_file);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n\n        // Create a Blob and URL for each subtitle file\n        const blob = new Blob([byteArray], {\n          type: 'text/vtt'\n        });\n        const url = URL.createObjectURL(blob);\n        return {\n          ...subtitle,\n          url\n        };\n      });\n      setSubtitleBlobs(blobs);\n    }\n  }, [subtitles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_vid\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"title-playing\",\n      children: title || \"None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play_area me-2\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"play_area\",\n        width: \"1000\",\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: selectedVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), subtitleBlobs.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"track\", {\n          src: subtitle.url,\n          label: subtitle.language,\n          kind: \"subtitles\",\n          srclang: subtitle.language,\n          default: index === 0\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Vid, \"Gdahd6TysaXutVHOcuf+KcI6ieE=\");\n_c = Vid;\nexport default Vid;\nvar _c;\n$RefreshReg$(_c, \"Vid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Vid","selectedVideo","subtitles","title","_s","subtitleBlobs","setSubtitleBlobs","useState","useEffect","blobs","map","subtitle","byteCharacters","atob","subtitle_file","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","url","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","controls","src","index","label","language","kind","srclang","default","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx"],"sourcesContent":["import React from 'react';\n\nfunction Vid({ selectedVideo, subtitles, title }) {\nconst [subtitleBlobs, setSubtitleBlobs] = useState([]);\n\nuseEffect(() => {\n    if (subtitles) {\n    const blobs = subtitles.map(subtitle => {\n        // Decode Base64 to binary data\n        const byteCharacters = atob(subtitle.subtitle_file);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n\n        // Create a Blob and URL for each subtitle file\n        const blob = new Blob([byteArray], { type: 'text/vtt' });\n        const url = URL.createObjectURL(blob);\n        return { ...subtitle, url };\n    });\n\n    setSubtitleBlobs(blobs);\n    }\n}, [subtitles]);\n\nreturn (\n    <div className=\"main_vid\">\n    <header className=\"title-playing\">{title || \"None\"}</header>\n    <div className=\"play_area me-2\">\n        <video className=\"play_area\" width=\"1000\" controls>\n        <source src={selectedVideo} type=\"video/mp4\" />\n        {subtitleBlobs.map((subtitle, index) => (\n            <track\n            key={index}\n            src={subtitle.url}\n            label={subtitle.language}\n            kind=\"subtitles\"\n            srclang={subtitle.language}\n            default={index === 0}\n            />\n        ))}\n        Your browser does not support the video tag.\n        </video>\n    </div>\n    </div>\n);\n}\n\nexport default Vid;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAC;EAAEC,aAAa;EAAEC,SAAS;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAIN,SAAS,EAAE;MACf,MAAMO,KAAK,GAAGP,SAAS,CAACQ,GAAG,CAACC,QAAQ,IAAI;QACpC;QACA,MAAMC,cAAc,GAAGC,IAAI,CAACF,QAAQ,CAACG,aAAa,CAAC;QACnD,MAAMC,WAAW,GAAG,IAAIC,KAAK,CAACJ,cAAc,CAACK,MAAM,CAAC;QACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,cAAc,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;UAChDH,WAAW,CAACG,CAAC,CAAC,GAAGN,cAAc,CAACO,UAAU,CAACD,CAAC,CAAC;QAC7C;QACA,MAAME,SAAS,GAAG,IAAIC,UAAU,CAACN,WAAW,CAAC;;QAE7C;QACA,MAAMO,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,SAAS,CAAC,EAAE;UAAEI,IAAI,EAAE;QAAW,CAAC,CAAC;QACxD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QACrC,OAAO;UAAE,GAAGX,QAAQ;UAAEc;QAAI,CAAC;MAC/B,CAAC,CAAC;MAEFnB,gBAAgB,CAACG,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IAAK6B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACzB9B,OAAA;MAAQ6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE1B,KAAK,IAAI;IAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC5DlC,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3B9B,OAAA;QAAO6B,SAAS,EAAC,WAAW;QAACM,KAAK,EAAC,MAAM;QAACC,QAAQ;QAAAN,QAAA,gBAClD9B,OAAA;UAAQqC,GAAG,EAAEnC,aAAc;UAACuB,IAAI,EAAC;QAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC9C5B,aAAa,CAACK,GAAG,CAAC,CAACC,QAAQ,EAAE0B,KAAK,kBAC/BtC,OAAA;UAEAqC,GAAG,EAAEzB,QAAQ,CAACc,GAAI;UAClBa,KAAK,EAAE3B,QAAQ,CAAC4B,QAAS;UACzBC,IAAI,EAAC,WAAW;UAChBC,OAAO,EAAE9B,QAAQ,CAAC4B,QAAS;UAC3BG,OAAO,EAAEL,KAAK,KAAK;QAAE,GALhBA,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMT,CACJ,CAAC,EAAC,8CAEH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC7B,EAAA,CA7CQJ,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}