{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vid({\n  videoId,\n  Title\n}) {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [selectedSubtitle, setSubtitle] = useState([]);\n  const displayTitle = Title || \"None selected\";\n  useEffect(() => {\n    const fetchVideoData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/play/${videoId}/`);\n        setSelectedVideo(response.data.video_url);\n\n        // Decode base64 subtitles and create Blob URLs\n        const subtitles = response.data.subtitles.map(subtitle => {\n          const decodedSubtitle = atob(subtitle.subtitle_file);\n          const blob = new Blob([decodedSubtitle], {\n            type: 'application/x-subrip'\n          });\n          return {\n            language: subtitle.language,\n            subtitle_file_url: URL.createObjectURL(blob)\n          };\n        });\n        setSubtitle(subtitles);\n      } catch (error) {\n        console.error(\"Error fetching video data:\", error);\n      }\n    };\n    if (videoId) {\n      fetchVideoData();\n    }\n  }, [videoId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_vid\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"title-playing\",\n      children: displayTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play_area me-2\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"play_area\",\n        width: \"1000\",\n        height: \"500\",\n        controls: true,\n        children: [selectedVideo && /*#__PURE__*/_jsxDEV(\"source\", {\n          src: selectedVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }, this), selectedSubtitle.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"track\", {\n          src: subtitle.subtitle_file_url,\n          label: subtitle.language,\n          kind: \"subtitles\",\n          srclang: subtitle.language,\n          default: index === 0\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Vid, \"2kIEbIX5IEjBTT8SLfMTz64XDKs=\");\n_c = Vid;\nexport default Vid;\nvar _c;\n$RefreshReg$(_c, \"Vid\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Vid","videoId","Title","_s","selectedVideo","setSelectedVideo","selectedSubtitle","setSubtitle","displayTitle","fetchVideoData","response","get","data","video_url","subtitles","map","subtitle","decodedSubtitle","atob","subtitle_file","blob","Blob","type","language","subtitle_file_url","URL","createObjectURL","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","controls","src","index","label","kind","srclang","default","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Vid({ videoId, Title }) {\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [selectedSubtitle, setSubtitle] = useState([]);\n    const displayTitle = Title || \"None selected\";\n\n    useEffect(() => {\n        const fetchVideoData = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8000/play/${videoId}/`);\n                setSelectedVideo(response.data.video_url);\n                \n                // Decode base64 subtitles and create Blob URLs\n                const subtitles = response.data.subtitles.map(subtitle => {\n                    const decodedSubtitle = atob(subtitle.subtitle_file);\n                    const blob = new Blob([decodedSubtitle], { type: 'application/x-subrip' }); \n                    return {\n                        language: subtitle.language,\n                        subtitle_file_url: URL.createObjectURL(blob)\n                    };\n                });\n                \n                setSubtitle(subtitles);\n            } catch (error) {\n                console.error(\"Error fetching video data:\", error);\n            }\n        };\n\n        if (videoId) {\n            fetchVideoData();\n        }\n    }, [videoId]);\n\n    return (\n        <div className=\"main_vid\">\n            {/* {console.log(selectedVideo)}\n            {console.log(selectedSubtitle)}\n            {console.log(videoId)} */}\n            <header className=\"title-playing\">{displayTitle}</header>\n            <div className=\"play_area me-2\">\n                <video className=\"play_area\" width=\"1000\" height=\"500\" controls>\n                    {/* {console.log(selectedVideo)} */}\n                    {selectedVideo && <source src={selectedVideo} type=\"video/mp4\" />}\n                    {selectedSubtitle.map((subtitle, index) => (\n                        <track\n                            key={index}\n                            src={subtitle.subtitle_file_url}\n                            label={subtitle.language}\n                            kind=\"subtitles\"\n                            srclang={subtitle.language}\n                            default={index === 0}\n                        />\n                    ))}\n                    Your browser does not support the video tag.\n                </video>\n            </div>\n        </div>\n    );\n}\n\nexport default Vid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}