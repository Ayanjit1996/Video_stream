{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/vid_list.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vid_list = ({\n  latest_list,\n  setSelectedVideoID,\n  setTitle,\n  setUploadsuccess\n}) => {\n  const handleVideoSelect = video => {\n    setSelectedVideoID(video.id); // Assuming vid_path is the video URL\n    setTitle(video.title); // Assuming title is the video title\n    setUploadsuccess(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list_view\",\n    children: [console.log(latest_list), latest_list.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card\",\n      onClick: () => handleVideoSelect(video),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnail_block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: video.thumbnail_url,\n          alt: \"thumbnail\",\n          className: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recom_vid_title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metadata\",\n          children: [\"Uploader - \", video.uploader]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metadata\",\n          children: [\"Uploaded on - \", new Date(video.created_at).toLocaleDateString(\"en-GB\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Vid_list;\nexport default Vid_list;\nvar _c;\n$RefreshReg$(_c, \"Vid_list\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Vid_list","latest_list","setSelectedVideoID","setTitle","setUploadsuccess","handleVideoSelect","video","id","title","className","children","console","log","map","index","onClick","src","thumbnail_url","alt","fileName","_jsxFileName","lineNumber","columnNumber","uploader","Date","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/vid_list.jsx"],"sourcesContent":["import React from 'react';\n\nconst Vid_list = ({ latest_list, setSelectedVideoID, setTitle , setUploadsuccess}) => {\nconst handleVideoSelect = (video) => {\n    setSelectedVideoID(video.id); // Assuming vid_path is the video URL\n    setTitle(video.title);           // Assuming title is the video title\n    setUploadsuccess(true);\n};\n\nreturn (\n    <div className=\"list_view\">\n        {console.log(latest_list)}\n    {latest_list.map((video, index) => (\n        <div key={index} className=\"Card\" onClick={() => handleVideoSelect(video)}>\n            <div className=\"thumbnail_block\">\n                <img src={video.thumbnail_url} alt=\"thumbnail\" className=\"thumbnail\"/>\n            </div>\n            <div className=\"video_info\">\n                <div className=\"recom_vid_title\">{video.title}</div>\n                <div className=\"metadata\">Uploader - {video.uploader}</div>\n                <div className=\"metadata\">Uploaded on - {new Date(video.created_at).toLocaleDateString(\"en-GB\")}</div>\n            </div>\n        </div>\n    ))}\n    </div>\n);\n};\n\nexport default Vid_list;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,kBAAkB;EAAEC,QAAQ;EAAGC;AAAgB,CAAC,KAAK;EACtF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,kBAAkB,CAACI,KAAK,CAACC,EAAE,CAAC,CAAC,CAAC;IAC9BJ,QAAQ,CAACG,KAAK,CAACE,KAAK,CAAC,CAAC,CAAW;IACjCJ,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIL,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBC,OAAO,CAACC,GAAG,CAACX,WAAW,CAAC,EAC5BA,WAAW,CAACY,GAAG,CAAC,CAACP,KAAK,EAAEQ,KAAK,kBAC1Bf,OAAA;MAAiBU,SAAS,EAAC,MAAM;MAACM,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACC,KAAK,CAAE;MAAAI,QAAA,gBACtEX,OAAA;QAAKU,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BX,OAAA;UAAKiB,GAAG,EAAEV,KAAK,CAACW,aAAc;UAACC,GAAG,EAAC,WAAW;UAACT,SAAS,EAAC;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACNvB,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBX,OAAA;UAAKU,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEJ,KAAK,CAACE;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDvB,OAAA;UAAKU,SAAS,EAAC,UAAU;UAAAC,QAAA,GAAC,aAAW,EAACJ,KAAK,CAACiB,QAAQ;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3DvB,OAAA;UAAKU,SAAS,EAAC,UAAU;UAAAC,QAAA,GAAC,gBAAc,EAAC,IAAIc,IAAI,CAAClB,KAAK,CAACmB,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrG,CAAC;IAAA,GARAR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV,CAAC;AAACK,EAAA,GAxBI3B,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}