{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  subs\n}) {\n  // const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  // const [subtitleArray, setSubtitleArray] = useState([]);\n\n  // useEffect(() => {\n  //     if (subs && Object.keys(subs).length > 0) {\n  //         // Set the first available language by default\n  //         const firstLanguage = Object.keys(subs)[0];\n  //         setSelectedLanguage(firstLanguage);\n  //     }\n  // }, [subs]);\n\n  // useEffect(() => {\n  //     if (selectedLanguage && subs[selectedLanguage]) {\n  //         const subtitles = subs[selectedLanguage];\n  //         const newSubtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n  //             timestamp,\n  //             dialogue\n  //         }));\n  //         setSubtitleArray(newSubtitleArray);\n  //     }\n  // }, [selectedLanguage, subs]);\n\n  // const handleLanguageChange = (event) => {\n  //     setSelectedLanguage(event.target.value);\n  // };\n\n  // const handleTimestampClick = (timestamp) => {\n  //     console.log(`Seeking to timestamp: ${timestamp}`);\n  //     // Add your logic to seek video to the specified timestamp here\n  // };\n\n  // if (!subs || typeof subs !== 'object' || Object.keys(subs).length === 0) {\n  //     return <div>No subtitles available.</div>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedLanguage,\n      onChange: handleLanguageChange,\n      children: Object.keys(subs).map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language,\n        children: language\n      }, language, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subtitleArray.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Subtitle","subs","className","children","value","selectedLanguage","onChange","handleLanguageChange","Object","keys","map","language","fileName","_jsxFileName","lineNumber","columnNumber","subtitleArray","subtitle","index","href","onClick","handleTimestampClick","timestamp","dialogue","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Subtitle({ subs }) {\n    // const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    // const [subtitleArray, setSubtitleArray] = useState([]);\n\n    // useEffect(() => {\n    //     if (subs && Object.keys(subs).length > 0) {\n    //         // Set the first available language by default\n    //         const firstLanguage = Object.keys(subs)[0];\n    //         setSelectedLanguage(firstLanguage);\n    //     }\n    // }, [subs]);\n\n    // useEffect(() => {\n    //     if (selectedLanguage && subs[selectedLanguage]) {\n    //         const subtitles = subs[selectedLanguage];\n    //         const newSubtitleArray = Object.entries(subtitles).map(([timestamp, dialogue]) => ({\n    //             timestamp,\n    //             dialogue\n    //         }));\n    //         setSubtitleArray(newSubtitleArray);\n    //     }\n    // }, [selectedLanguage, subs]);\n\n    // const handleLanguageChange = (event) => {\n    //     setSelectedLanguage(event.target.value);\n    // };\n\n    // const handleTimestampClick = (timestamp) => {\n    //     console.log(`Seeking to timestamp: ${timestamp}`);\n    //     // Add your logic to seek video to the specified timestamp here\n    // };\n\n    // if (!subs || typeof subs !== 'object' || Object.keys(subs).length === 0) {\n    //     return <div>No subtitles available.</div>;\n    // }\n\n    return (\n        <div className=\"subtitle\">\n            <select value={selectedLanguage} onChange={handleLanguageChange}>\n                {Object.keys(subs).map((language) => (\n                    <option key={language} value={language}>\n                        {language}\n                    </option>\n                ))}\n            </select>\n            <ul>\n                {subtitleArray.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACxB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACIF,OAAA;IAAKG,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBJ,OAAA;MAAQK,KAAK,EAAEC,gBAAiB;MAACC,QAAQ,EAAEC,oBAAqB;MAAAJ,QAAA,EAC3DK,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,GAAG,CAAEC,QAAQ,iBAC5BZ,OAAA;QAAuBK,KAAK,EAAEO,QAAS;QAAAR,QAAA,EAClCQ;MAAQ,GADAA,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACThB,OAAA;MAAAI,QAAA,EACKa,aAAa,CAACN,GAAG,CAAC,CAACO,QAAQ,EAAEC,KAAK,kBAC/BnB,OAAA;QAAAI,QAAA,eACIJ,OAAA;UAAKG,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACrBJ,OAAA;YACIoB,IAAI,EAAC,GAAG;YACRC,OAAO,EAAEA,CAAA,KAAMC,oBAAoB,CAACJ,QAAQ,CAACK,SAAS,CAAE;YAAAnB,QAAA,EACvDc,QAAQ,CAACK;UAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,EAAC,GAAG,EAAC,iBACK,EAACE,QAAQ,CAACM,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GARDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACS,EAAA,GA7DQxB,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}