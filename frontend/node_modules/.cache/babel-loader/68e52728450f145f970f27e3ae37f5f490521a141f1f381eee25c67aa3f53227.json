{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/vid_list.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vid_list = ({\n  thumbnail,\n  title,\n  uploader,\n  views,\n  time\n}) => {\n  _s();\n  const [latest_list, Fetchlatest_list] = useState([]);\n  const fetch = async e => {\n    e.preventDefault();\n    if (!videoFile || !uploader) {\n      alert(\"Please select a video file and provide uploader name\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"video\", videoFile);\n    formData.append(\"uploader\", uploader);\n    try {\n      const response = await axios.post(\"http://localhost:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response);\n      if (response.status === 200) {\n        alert(\"Video uploaded successfully\");\n      } else {\n        alert(\"Upload failed. Status: \" + response.status);\n      }\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      alert(\"Network error or server issue during upload\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list_view \",\n    children: a.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnail_block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbnail,\n          alt: \"thumbnail\",\n          className: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"recom_vid_title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uploader\",\n          children: uploader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Upload - \", time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Vid_list, \"U0sCg0vavmkMxFqGZBw/dEN3AIY=\");\n_c = Vid_list;\nexport default Vid_list;\nvar _c;\n$RefreshReg$(_c, \"Vid_list\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Vid_list","thumbnail","title","uploader","views","time","_s","latest_list","Fetchlatest_list","fetch","e","preventDefault","videoFile","alert","formData","FormData","append","response","axios","post","headers","console","log","status","error","className","children","a","map","_","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/vid_list.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst Vid_list = ({ thumbnail, title, uploader, views, time }) => {\n    const [latest_list, Fetchlatest_list] = useState([]);\n    const fetch = async (e) => {\n        e.preventDefault();\n    \n        if (!videoFile || !uploader) {\n        alert(\"Please select a video file and provide uploader name\");\n        return;\n        }\n    \n        const formData = new FormData();\n        formData.append(\"video\", videoFile);\n        formData.append(\"uploader\", uploader);\n    \n        try {\n        const response = await axios.post(\n            \"http://localhost:8000/upload/\",\n            formData,\n            {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n            }\n        );\n        console.log(response);\n        if (response.status === 200) {\n            alert(\"Video uploaded successfully\");\n        } else {\n            alert(\"Upload failed. Status: \" + response.status);\n        }\n        } catch (error) {\n        console.error(\"Error uploading video:\", error);\n        alert(\"Network error or server issue during upload\");\n        }\n    };\n\n    return (\n    <div className=\"list_view \">\n        {a.map((_, index) => (\n        <div key={index} className=\"Card \">\n            <div className=\"thumbnail_block\">\n            <img src={thumbnail} alt=\"thumbnail\" className=\"thumbnail\" />\n            </div>\n            <div className=\"video-info\">\n                <h4 id=\"recom_vid_title\">{title}</h4>\n                <p id=\"uploader\">{uploader}</p>\n                <p>Upload - {time}</p>\n            </div>\n        </div>\n        ))}\n    </div>\n    );\n};\n\nexport default Vid_list;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}