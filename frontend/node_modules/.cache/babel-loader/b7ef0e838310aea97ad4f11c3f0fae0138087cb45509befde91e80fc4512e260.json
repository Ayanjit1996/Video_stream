{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/vid_list.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vid_list = ({\n  latest_list,\n  setSelectedVideoID,\n  setTitle,\n  setUploadsuccess\n}) => {\n  const handleVideoSelect = video => {\n    setSelectedVideoID(null); // Clear the selected video temporarily\n    setTimeout(() => {\n      // Then set the selected video again after clearing\n      setSelectedVideoID(video.id);\n      setTitle(video.title);\n      setUploadsuccess(true);\n    }, 0); // Trigger the state update on the next cycle to force re-render\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list_view\",\n    children: latest_list.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card\",\n      onClick: () => handleVideoSelect(video),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnail_block\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: video.thumbnail_url,\n          alt: \"thumbnail\",\n          className: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recom_vid_title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metadata\",\n          children: [\"Uploader - \", video.uploader]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metadata\",\n          children: [\"Uploaded on - \", new Date(video.created_at).toLocaleDateString(\"en-GB\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Vid_list;\nexport default Vid_list;\nvar _c;\n$RefreshReg$(_c, \"Vid_list\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Vid_list","latest_list","setSelectedVideoID","setTitle","setUploadsuccess","handleVideoSelect","video","setTimeout","id","title","className","children","map","index","onClick","src","thumbnail_url","alt","fileName","_jsxFileName","lineNumber","columnNumber","uploader","Date","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/vid_list.jsx"],"sourcesContent":["import React from 'react';\n\nconst Vid_list = ({ latest_list, setSelectedVideoID, setTitle , setUploadsuccess }) => {\n    const handleVideoSelect = (video) => {\n        setSelectedVideoID(null); // Clear the selected video temporarily\n        setTimeout(() => {\n            // Then set the selected video again after clearing\n            setSelectedVideoID(video.id);\n            setTitle(video.title);\n            setUploadsuccess(true);\n        }, 0); // Trigger the state update on the next cycle to force re-render\n    };\n\n    return (\n        <div className=\"list_view\">\n            {latest_list.map((video, index) => (\n                <div key={index} className=\"Card\" onClick={() => handleVideoSelect(video)}>\n                    <div className=\"thumbnail_block\">\n                        <img src={video.thumbnail_url} alt=\"thumbnail\" className=\"thumbnail\" />\n                    </div>\n                    <div className=\"video_info\">\n                        <div className=\"recom_vid_title\">{video.title}</div>\n                        <div className=\"metadata\">Uploader - {video.uploader}</div>\n                        <div className=\"metadata\">Uploaded on - {new Date(video.created_at).toLocaleDateString(\"en-GB\")}</div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Vid_list;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,kBAAkB;EAAEC,QAAQ;EAAGC;AAAiB,CAAC,KAAK;EACnF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1BK,UAAU,CAAC,MAAM;MACb;MACAL,kBAAkB,CAACI,KAAK,CAACE,EAAE,CAAC;MAC5BL,QAAQ,CAACG,KAAK,CAACG,KAAK,CAAC;MACrBL,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC;EAED,oBACIL,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBV,WAAW,CAACW,GAAG,CAAC,CAACN,KAAK,EAAEO,KAAK,kBAC1Bd,OAAA;MAAiBW,SAAS,EAAC,MAAM;MAACI,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAACC,KAAK,CAAE;MAAAK,QAAA,gBACtEZ,OAAA;QAAKW,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BZ,OAAA;UAAKgB,GAAG,EAAET,KAAK,CAACU,aAAc;UAACC,GAAG,EAAC,WAAW;UAACP,SAAS,EAAC;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACNtB,OAAA;QAAKW,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBZ,OAAA;UAAKW,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEL,KAAK,CAACG;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDtB,OAAA;UAAKW,SAAS,EAAC,UAAU;UAAAC,QAAA,GAAC,aAAW,EAACL,KAAK,CAACgB,QAAQ;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3DtB,OAAA;UAAKW,SAAS,EAAC,UAAU;UAAAC,QAAA,GAAC,gBAAc,EAAC,IAAIY,IAAI,CAACjB,KAAK,CAACkB,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrG,CAAC;IAAA,GARAR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACK,EAAA,GA3BI1B,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}