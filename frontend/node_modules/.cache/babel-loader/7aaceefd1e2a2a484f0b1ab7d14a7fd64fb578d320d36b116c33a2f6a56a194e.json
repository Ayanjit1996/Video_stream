{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub\n}) {\n  _s();\n  const handleTimestampClick = timestamp => {\n    console.log(`Seeking to timestamp: ${timestamp}`);\n  };\n  if (!sub) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  let subtitleData;\n  try {\n    subtitleData = typeof sub === 'string' ? JSON.parse(sub) : sub;\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error parsing subtitles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  const languages = Object.keys(subtitleData);\n  const [selectedLanguage, setSelectedLanguage] = useState(languages[0]); // Default to the first language\n\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n  };\n  const subtitleArray = Object.entries(subtitleData[selectedLanguage] || {}).map(([timestamp, dialogue]) => ({\n    timestamp,\n    dialogue\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"language\",\n        children: \"Select Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"language\",\n        value: selectedLanguage,\n        onChange: handleLanguageChange,\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subtitleArray.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"0/xnYTcpeJhKgKVxhCd3K57lXQU=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Subtitle","sub","_s","handleTimestampClick","timestamp","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","subtitleData","JSON","parse","error","languages","Object","keys","selectedLanguage","setSelectedLanguage","handleLanguageChange","event","target","value","subtitleArray","entries","map","dialogue","className","htmlFor","id","onChange","language","subtitle","index","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Subtitle({ sub }) {\n    const handleTimestampClick = (timestamp) => {\n        console.log(`Seeking to timestamp: ${timestamp}`);\n    };\n\n    if (!sub) {\n        return <div>No subtitles available.</div>;\n    }\n\n    let subtitleData;\n    try {\n        subtitleData = typeof sub === 'string' ? JSON.parse(sub) : sub;\n    } catch (error) {\n        return <div>Error parsing subtitles.</div>;\n    }\n\n    const languages = Object.keys(subtitleData);\n    const [selectedLanguage, setSelectedLanguage] = useState(languages[0]); // Default to the first language\n\n    const handleLanguageChange = (event) => {\n        setSelectedLanguage(event.target.value);\n    };\n\n    const subtitleArray = Object.entries(subtitleData[selectedLanguage] || {}).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue\n    }));\n\n    return (\n        <div className=\"subtitle\">\n            <div className=\"language-selector\">\n                <label htmlFor=\"language\">Select Language:</label>\n                <select id=\"language\" value={selectedLanguage} onChange={handleLanguageChange}>\n                    {languages.map((language) => (\n                        <option key={language} value={language}>\n                            {language}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            <ul>\n                {subtitleArray.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EACvB,MAAMC,oBAAoB,GAAIC,SAAS,IAAK;IACxCC,OAAO,CAACC,GAAG,CAAC,yBAAyBF,SAAS,EAAE,CAAC;EACrD,CAAC;EAED,IAAI,CAACH,GAAG,EAAE;IACN,oBAAOF,OAAA;MAAAQ,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7C;EAEA,IAAIC,YAAY;EAChB,IAAI;IACAA,YAAY,GAAG,OAAOX,GAAG,KAAK,QAAQ,GAAGY,IAAI,CAACC,KAAK,CAACb,GAAG,CAAC,GAAGA,GAAG;EAClE,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZ,oBAAOhB,OAAA;MAAAQ,QAAA,EAAK;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;EAEA,MAAMK,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC;EAC3C,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAACmB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExE,MAAMK,oBAAoB,GAAIC,KAAK,IAAK;IACpCF,mBAAmB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3C,CAAC;EAED,MAAMC,aAAa,GAAGR,MAAM,CAACS,OAAO,CAACd,YAAY,CAACO,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACvB,SAAS,EAAEwB,QAAQ,CAAC,MAAM;IACvGxB,SAAS;IACTwB;EACJ,CAAC,CAAC,CAAC;EAEH,oBACI7B,OAAA;IAAK8B,SAAS,EAAC,UAAU;IAAAtB,QAAA,gBACrBR,OAAA;MAAK8B,SAAS,EAAC,mBAAmB;MAAAtB,QAAA,gBAC9BR,OAAA;QAAO+B,OAAO,EAAC,UAAU;QAAAvB,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDZ,OAAA;QAAQgC,EAAE,EAAC,UAAU;QAACP,KAAK,EAAEL,gBAAiB;QAACa,QAAQ,EAAEX,oBAAqB;QAAAd,QAAA,EACzES,SAAS,CAACW,GAAG,CAAEM,QAAQ,iBACpBlC,OAAA;UAAuByB,KAAK,EAAES,QAAS;UAAA1B,QAAA,EAClC0B;QAAQ,GADAA,QAAQ;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENZ,OAAA;MAAAQ,QAAA,EACKkB,aAAa,CAACE,GAAG,CAAC,CAACO,QAAQ,EAAEC,KAAK,kBAC/BpC,OAAA;QAAAQ,QAAA,eACIR,OAAA;UAAK8B,SAAS,EAAC,UAAU;UAAAtB,QAAA,gBACrBR,OAAA;YACIgC,EAAE,EAAC,WAAW;YACdK,IAAI,EAAC,GAAG;YACRC,OAAO,EAAEA,CAAA,KAAMlC,oBAAoB,CAAC+B,QAAQ,CAAC9B,SAAS,CAAE;YAAAG,QAAA,EACvD2B,QAAQ,CAAC9B;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,EAAC,GAAG,EAAC,iBACK,EAACuB,QAAQ,CAACN,QAAQ;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GATDwB,KAAK;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACT,EAAA,CA1DQF,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AA4DjB,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}