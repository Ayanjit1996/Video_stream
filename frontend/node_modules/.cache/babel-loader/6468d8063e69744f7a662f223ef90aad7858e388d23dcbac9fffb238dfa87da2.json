{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub\n}) {\n  const handleTimestampClick = timestamp => {\n    console.log(`Seeking to timestamp: ${timestamp}`);\n  };\n  if (!sub) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  let subtitleData;\n  try {\n    subtitleData = typeof sub === 'string' ? JSON.parse(sub) : sub;\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error parsing subtitles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  const subtitleArray = Object.entries(subtitleData).map(([timestamp, dialogue]) => ({\n    timestamp,\n    dialogue\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [console.log(subtitleArray), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subtitleArray.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Subtitle","sub","handleTimestampClick","timestamp","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","subtitleData","JSON","parse","error","subtitleArray","Object","entries","map","dialogue","className","subtitle","index","id","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction Subtitle({ sub }) {\n    const handleTimestampClick = (timestamp) => {\n        console.log(`Seeking to timestamp: ${timestamp}`);\n    };\n\n    if (!sub) {\n        return <div>No subtitles available.</div>;\n    }\n\n    let subtitleData;\n    try {\n        subtitleData = typeof sub === 'string' ? JSON.parse(sub) : sub;\n    } catch (error) {\n        return <div>Error parsing subtitles.</div>;\n    }\n\n    const subtitleArray = Object.entries(subtitleData).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue\n    }));\n\n    return (\n        <div className=\"subtitle\">\n            {console.log(subtitleArray)}\n            <ul>\n                {subtitleArray.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC;AAAI,CAAC,EAAE;EACvB,MAAMC,oBAAoB,GAAIC,SAAS,IAAK;IACxCC,OAAO,CAACC,GAAG,CAAC,yBAAyBF,SAAS,EAAE,CAAC;EACrD,CAAC;EAED,IAAI,CAACF,GAAG,EAAE;IACN,oBAAOF,OAAA;MAAAO,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7C;EAEA,IAAIC,YAAY;EAChB,IAAI;IACAA,YAAY,GAAG,OAAOV,GAAG,KAAK,QAAQ,GAAGW,IAAI,CAACC,KAAK,CAACZ,GAAG,CAAC,GAAGA,GAAG;EAClE,CAAC,CAAC,OAAOa,KAAK,EAAE;IACZ,oBAAOf,OAAA;MAAAO,QAAA,EAAK;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;EAEA,MAAMK,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACN,YAAY,CAAC,CAACO,GAAG,CAAC,CAAC,CAACf,SAAS,EAAEgB,QAAQ,CAAC,MAAM;IAC/EhB,SAAS;IACTgB;EACJ,CAAC,CAAC,CAAC;EAEH,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAd,QAAA,GACpBF,OAAO,CAACC,GAAG,CAACU,aAAa,CAAC,eAC3BhB,OAAA;MAAAO,QAAA,EACKS,aAAa,CAACG,GAAG,CAAC,CAACG,QAAQ,EAAEC,KAAK,kBAC/BvB,OAAA;QAAAO,QAAA,eACIP,OAAA;UAAKqB,SAAS,EAAC,UAAU;UAAAd,QAAA,gBACrBP,OAAA;YACIwB,EAAE,EAAC,WAAW;YACdC,IAAI,EAAC,GAAG;YACRC,OAAO,EAAEA,CAAA,KAAMvB,oBAAoB,CAACmB,QAAQ,CAAClB,SAAS,CAAE;YAAAG,QAAA,EACvDe,QAAQ,CAAClB;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,EAAC,GAAG,EAAC,iBACK,EAACW,QAAQ,CAACF,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GATDY,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACgB,EAAA,GAzCQ1B,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}