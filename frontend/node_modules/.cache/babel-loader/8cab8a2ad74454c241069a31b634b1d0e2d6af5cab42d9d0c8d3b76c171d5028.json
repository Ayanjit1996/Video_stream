{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [videos, setVideos] = useState([]); // List of all videos\n  const [currentVideo, setCurrentVideo] = useState(null); // Current video to play\n  const [subtitles, setSubtitles] = useState([]); // Subtitles for the current video\n\n  useEffect(() => {\n    // Fetch the list of videos from the backend\n    const fetchVideos = async () => {\n      const response = await axios.get('/videos'); // Replace with your backend endpoint\n      setVideos(response.data);\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoClick = async videoId => {\n    // Fetch the details of the clicked video from the backend\n    const response = await axios.get(`/play/${videoId}`); // Fetch video by ID\n    setCurrentVideo(response.data.video_url); // Update the current video\n    setSubtitles(response.data.subtitles); // Set the subtitles for the video\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVideoClick(video.id),\n        children: video.title\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player\",\n      children: currentVideo && /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        autoPlay: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), subtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"track\", {\n          label: subtitle.language,\n          kind: \"subtitles\",\n          srcLang: subtitle.language,\n          src: `data:text/vtt;base64,${subtitle.subtitle_file}`,\n          default: index === 0 // First subtitle as default\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"4TveV2l5riccFZLKsMFbSlI3hVE=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","VideoPlayer","_s","videos","setVideos","currentVideo","setCurrentVideo","subtitles","setSubtitles","fetchVideos","response","get","data","handleVideoClick","videoId","video_url","children","className","map","video","onClick","id","title","fileName","_jsxFileName","lineNumber","columnNumber","controls","autoPlay","src","type","subtitle","index","label","language","kind","srcLang","subtitle_file","default","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst VideoPlayer = () => {\n  const [videos, setVideos] = useState([]); // List of all videos\n  const [currentVideo, setCurrentVideo] = useState(null); // Current video to play\n  const [subtitles, setSubtitles] = useState([]); // Subtitles for the current video\n\n  useEffect(() => {\n    // Fetch the list of videos from the backend\n    const fetchVideos = async () => {\n      const response = await axios.get('/videos'); // Replace with your backend endpoint\n      setVideos(response.data);\n    };\n    fetchVideos();\n  }, []);\n\n  const handleVideoClick = async (videoId) => {\n    // Fetch the details of the clicked video from the backend\n    const response = await axios.get(`/play/${videoId}`); // Fetch video by ID\n    setCurrentVideo(response.data.video_url); // Update the current video\n    setSubtitles(response.data.subtitles); // Set the subtitles for the video\n  };\n\n  return (\n    <div>\n      {/* Video list */}\n      <div className=\"video-list\">\n        {videos.map((video) => (\n          <button key={video.id} onClick={() => handleVideoClick(video.id)}>\n            {video.title}\n          </button>\n        ))}\n      </div>\n\n      {/* Video Player */}\n      <div className=\"video-player\">\n        {currentVideo && (\n          <video controls autoPlay>\n            <source src={currentVideo} type=\"video/mp4\" />\n            {/* Render subtitles if available */}\n            {subtitles.map((subtitle, index) => (\n              <track\n                key={index}\n                label={subtitle.language}\n                kind=\"subtitles\"\n                srcLang={subtitle.language}\n                src={`data:text/vtt;base64,${subtitle.subtitle_file}`}\n                default={index === 0} // First subtitle as default\n              />\n            ))}\n            Your browser does not support the video tag.\n          </video>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}