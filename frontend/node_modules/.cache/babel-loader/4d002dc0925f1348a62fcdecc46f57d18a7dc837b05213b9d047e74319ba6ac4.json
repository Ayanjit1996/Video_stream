{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub\n}) {\n  _s();\n  const [parsedSubtitles, setParsedSubtitles] = useState([]);\n  useEffect(() => {\n    const parseSubtitles = sub => {\n      const subtitleList = [];\n      const regex = /(\\d{2}:\\d{2}:\\d{2}.\\d{3}) --> (\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s+([\\s\\S]+?)(?=\\d{2}:\\d{2}:\\d{2}.\\d{3} -->|\\n\\n|\\r\\n\\r\\n|$)/g;\n      let match;\n      while ((match = regex.exec(sub)) !== null) {\n        const startTimestamp = match[1]; // Start timestamp\n        const endTimestamp = match[2]; // End timestamp\n        const dialogue = match[3].trim(); // Dialogue (with extra spaces trimmed)\n\n        // Debugging output\n        console.log(startTimestamp, \" --> \", endTimestamp);\n        console.log(\"Dialogue:\", dialogue);\n\n        // Add the subtitle entry to the list\n        subtitleList.push({\n          startTimestamp,\n          endTimestamp,\n          dialogue\n        });\n      }\n      return subtitleList;\n    };\n    const parsed = parseSubtitles(sub);\n    setParsedSubtitles(parsed);\n  }, [sub]);\n  const handleTimestampClick = timestamp => {\n    console.log(`Jump to: ${timestamp}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: parsedSubtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Subtitle, \"Hr94gH5Tgy5q0gI73fSvaqvGmF4=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Subtitle","sub","_s","parsedSubtitles","setParsedSubtitles","parseSubtitles","subtitleList","regex","match","exec","startTimestamp","endTimestamp","dialogue","trim","console","log","push","parsed","handleTimestampClick","timestamp","className","children","map","subtitle","index","id","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["    import React, { useState, useEffect } from \"react\";\n\n    function Subtitle({ sub }) {\n    const [parsedSubtitles, setParsedSubtitles] = useState([]);\n\n    useEffect(() => {\n\n    const parseSubtitles = (sub) => {\n        const subtitleList = [];\n    \n        const regex = /(\\d{2}:\\d{2}:\\d{2}.\\d{3}) --> (\\d{2}:\\d{2}:\\d{2}.\\d{3})\\s+([\\s\\S]+?)(?=\\d{2}:\\d{2}:\\d{2}.\\d{3} -->|\\n\\n|\\r\\n\\r\\n|$)/g;\n        \n        let match;\n    \n        while ((match = regex.exec(sub)) !== null) {\n            const startTimestamp = match[1];  // Start timestamp\n            const endTimestamp = match[2];    // End timestamp\n            const dialogue = match[3].trim(); // Dialogue (with extra spaces trimmed)\n            \n            // Debugging output\n            console.log(startTimestamp, \" --> \", endTimestamp);\n            console.log(\"Dialogue:\", dialogue);\n\n            // Add the subtitle entry to the list\n            subtitleList.push({\n                startTimestamp,\n                endTimestamp,\n                dialogue,\n            });\n        }\n    \n        return subtitleList;\n    };\n\n    const parsed = parseSubtitles(sub); \n    setParsedSubtitles(parsed);\n    }, [sub]);\n\n    const handleTimestampClick = (timestamp) => {\n    console.log(`Jump to: ${timestamp}`);\n    };\n\n    return (\n    <div className=\"subtitle\">\n        <ul>\n        {parsedSubtitles.map((subtitle, index) => (\n            <li key={index}>\n            <div className=\"dialogue\">\n                <a\n                id=\"timestamp\"\n                href=\"#\"\n                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                {subtitle.timestamp}\n                </a>{\" \"}\n                &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n            </div>\n            </li>\n        ))}\n        </ul>\n    </div>\n    );\n    }\n\n    export default Subtitle;\n"],"mappings":";;AAAI,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IAEhB,MAAMQ,cAAc,GAAIJ,GAAG,IAAK;MAC5B,MAAMK,YAAY,GAAG,EAAE;MAEvB,MAAMC,KAAK,GAAG,sHAAsH;MAEpI,IAAIC,KAAK;MAET,OAAO,CAACA,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACR,GAAG,CAAC,MAAM,IAAI,EAAE;QACvC,MAAMS,cAAc,GAAGF,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;QAClC,MAAMG,YAAY,GAAGH,KAAK,CAAC,CAAC,CAAC,CAAC,CAAI;QAClC,MAAMI,QAAQ,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;;QAElC;QACAC,OAAO,CAACC,GAAG,CAACL,cAAc,EAAE,OAAO,EAAEC,YAAY,CAAC;QAClDG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;;QAElC;QACAN,YAAY,CAACU,IAAI,CAAC;UACdN,cAAc;UACdC,YAAY;UACZC;QACJ,CAAC,CAAC;MACN;MAEA,OAAON,YAAY;IACvB,CAAC;IAED,MAAMW,MAAM,GAAGZ,cAAc,CAACJ,GAAG,CAAC;IAClCG,kBAAkB,CAACa,MAAM,CAAC;EAC1B,CAAC,EAAE,CAAChB,GAAG,CAAC,CAAC;EAET,MAAMiB,oBAAoB,GAAIC,SAAS,IAAK;IAC5CL,OAAO,CAACC,GAAG,CAAC,YAAYI,SAAS,EAAE,CAAC;EACpC,CAAC;EAED,oBACApB,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBtB,OAAA;MAAAsB,QAAA,EACClB,eAAe,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACjCzB,OAAA;QAAAsB,QAAA,eACAtB,OAAA;UAAKqB,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACrBtB,OAAA;YACA0B,EAAE,EAAC,WAAW;YACdC,IAAI,EAAC,GAAG;YACRC,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACK,QAAQ,CAACJ,SAAS,CAAE;YAAAE,QAAA,EACvDE,QAAQ,CAACJ;UAAS;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,EAAC,GAAG,EAAC,iBACK,EAACR,QAAQ,CAACX,QAAQ;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GATGP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEN;AAAC7B,EAAA,CA3DQF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA6DjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}