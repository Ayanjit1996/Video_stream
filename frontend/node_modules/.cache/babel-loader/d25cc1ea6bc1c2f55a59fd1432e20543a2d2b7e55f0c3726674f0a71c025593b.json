{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Subtitle({\n  sub\n}) {\n  _s();\n  const handleTimestampClick = timestamp => {\n    console.log(`Seeking to timestamp: ${timestamp}`);\n  };\n\n  // Initialize the selected language state\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  let subtitleData = {};\n  try {\n    subtitleData = typeof sub === 'string' ? JSON.parse(sub) : sub;\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error parsing subtitles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Get available languages from subtitle data\n  const languages = Object.keys(subtitleData);\n\n  // Set the selected language to the first available one on mount\n  useEffect(() => {\n    if (languages.length > 0) {\n      setSelectedLanguage(languages[0]);\n    }\n  }, [languages]);\n\n  // Ensure we have subtitles for the selected language\n  const subtitleArray = Object.entries(subtitleData[selectedLanguage] || {}).map(([timestamp, dialogue]) => ({\n    timestamp,\n    dialogue\n  }));\n  const handleLanguageChange = event => {\n    setSelectedLanguage(event.target.value);\n  };\n  if (!languages.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No subtitles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"language\",\n        children: \"Select Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"language\",\n        value: selectedLanguage,\n        onChange: handleLanguageChange,\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subtitleArray.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialogue\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"timestamp\",\n            href: \"#\",\n            onClick: () => handleTimestampClick(subtitle.timestamp),\n            children: subtitle.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), \" \", \"\\xA0\\xA0\\u2022 \", subtitle.dialogue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Subtitle, \"xMWgAsMv+YSK07+xxWSacm/5ADc=\");\n_c = Subtitle;\nexport default Subtitle;\nvar _c;\n$RefreshReg$(_c, \"Subtitle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Subtitle","sub","_s","handleTimestampClick","timestamp","console","log","selectedLanguage","setSelectedLanguage","subtitleData","JSON","parse","error","children","fileName","_jsxFileName","lineNumber","columnNumber","languages","Object","keys","length","subtitleArray","entries","map","dialogue","handleLanguageChange","event","target","value","className","htmlFor","id","onChange","language","subtitle","index","href","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/subtitle_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Subtitle({ sub }) {\n    const handleTimestampClick = (timestamp) => {\n        console.log(`Seeking to timestamp: ${timestamp}`);\n    };\n\n    // Initialize the selected language state\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n\n    let subtitleData = {};\n    try {\n        subtitleData = typeof sub === 'string' ? JSON.parse(sub) : sub;\n    } catch (error) {\n        return <div>Error parsing subtitles.</div>;\n    }\n\n    // Get available languages from subtitle data\n    const languages = Object.keys(subtitleData);\n\n    // Set the selected language to the first available one on mount\n    useEffect(() => {\n        if (languages.length > 0) {\n            setSelectedLanguage(languages[0]);\n        }\n    }, [languages]);\n\n    // Ensure we have subtitles for the selected language\n    const subtitleArray = Object.entries(subtitleData[selectedLanguage] || {}).map(([timestamp, dialogue]) => ({\n        timestamp,\n        dialogue\n    }));\n\n    const handleLanguageChange = (event) => {\n        setSelectedLanguage(event.target.value);\n    };\n\n    if (!languages.length) {\n        return <div>No subtitles available.</div>;\n    }\n\n    return (\n        <div className=\"subtitle\">\n            <div className=\"language-selector\">\n                <label htmlFor=\"language\">Select Language:</label>\n                <select id=\"language\" value={selectedLanguage} onChange={handleLanguageChange}>\n                    {languages.map((language) => (\n                        <option key={language} value={language}>\n                            {language}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            <ul>\n                {subtitleArray.map((subtitle, index) => (\n                    <li key={index}>\n                        <div className=\"dialogue\">\n                            <a\n                                id=\"timestamp\"\n                                href=\"#\"\n                                onClick={() => handleTimestampClick(subtitle.timestamp)}>\n                                {subtitle.timestamp}\n                            </a>{\" \"}\n                            &nbsp;&nbsp;â€¢ {subtitle.dialogue}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Subtitle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}