{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vid({\n  selectedVideoID,\n  Title\n}) {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [subtitles, setSubtitles] = useState([]);\n  const displayTitle = Title || \"None selected\";\n  useEffect(() => {\n    const fetchVideoData = async () => {\n      setSelectedVideo(null);\n      setSubtitles([]);\n      try {\n        const response = await axios.get(`http://localhost:8000/play/${selectedVideoID}/`);\n        setSelectedVideo(response.data.video_url);\n\n        // Create subtitle URLs\n        const subtitleTracks = response.data.subtitles.map(async subtitle => {\n          const encodedSubtitle = subtitle.subtitle_file;\n          const binaryStr = atob(encodedSubtitle);\n          const len = binaryStr.length;\n          const bytes = new Uint8Array(len);\n          for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n          }\n          const blob = new Blob([bytes], {\n            type: \"application/x-subrip\"\n          });\n          return {\n            language: subtitle.language,\n            subtitle_file_url: URL.createObjectURL(blob)\n          };\n        });\n\n        // Resolve subtitle tracks\n        const resolvedTracks = await Promise.all(subtitleTracks);\n        setSubtitles(resolvedTracks);\n      } catch (error) {\n        console.error(\"Error fetching video data:\", error);\n      }\n    };\n    if (selectedVideoID) {\n      fetchVideoData();\n    }\n  }, [selectedVideoID]);\n  const videoKey = selectedVideoID ? `video-${selectedVideoID}` : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_vid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play_area\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"play_area\",\n        width: \"1000\",\n        height: \"500\",\n        controls: true,\n        children: [selectedVideo && /*#__PURE__*/_jsxDEV(\"source\", {\n          src: selectedVideo,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 39\n        }, this), subtitles.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No subtitles available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }, this), subtitles.map((subtitle, index) => /*#__PURE__*/_jsxDEV(\"track\", {\n          src: subtitle.subtitle_file_url,\n          label: subtitle.language,\n          kind: \"subtitles\",\n          srcLang: subtitle.language,\n          default: index === 0 // Set first subtitle as default\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)), \"Your browser does not support the video tag.\"]\n      }, videoKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"title-playing\",\n      children: displayTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Vid, \"sHodV4rzQ/5cKvjiwCHyzLVxZK8=\");\n_c = Vid;\nexport default Vid;\nvar _c;\n$RefreshReg$(_c, \"Vid\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Vid","selectedVideoID","Title","_s","selectedVideo","setSelectedVideo","subtitles","setSubtitles","displayTitle","fetchVideoData","response","get","data","video_url","subtitleTracks","map","subtitle","encodedSubtitle","subtitle_file","binaryStr","atob","len","length","bytes","Uint8Array","i","charCodeAt","blob","Blob","type","language","subtitle_file_url","URL","createObjectURL","resolvedTracks","Promise","all","error","console","videoKey","className","children","width","height","controls","src","fileName","_jsxFileName","lineNumber","columnNumber","index","label","kind","srcLang","default","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/Desktop/assignment/frntend/src/video_section.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Vid({ selectedVideoID, Title }) {\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [subtitles, setSubtitles] = useState([]);\n    const displayTitle = Title || \"None selected\";\n\n    useEffect(() => {\n        const fetchVideoData = async () => {\n            setSelectedVideo(null);\n            setSubtitles([]);\n\n            try {\n                const response = await axios.get(\n                    `http://localhost:8000/play/${selectedVideoID}/`\n                );\n                setSelectedVideo(response.data.video_url);\n\n                // Create subtitle URLs\n                const subtitleTracks = response.data.subtitles.map(async (subtitle) => {\n                    const encodedSubtitle = subtitle.subtitle_file;\n                    const binaryStr = atob(encodedSubtitle);\n                    const len = binaryStr.length;\n                    const bytes = new Uint8Array(len);\n                    for (let i = 0; i < len; i++) {\n                        bytes[i] = binaryStr.charCodeAt(i);\n                    }\n\n                    const blob = new Blob([bytes], {\n                        type: \"application/x-subrip\",\n                    });\n                    return {\n                        language: subtitle.language,\n                        subtitle_file_url: URL.createObjectURL(blob),\n                    };\n                });\n\n                // Resolve subtitle tracks\n                const resolvedTracks = await Promise.all(subtitleTracks);\n                setSubtitles(resolvedTracks);\n            } catch (error) {\n                console.error(\"Error fetching video data:\", error);\n            }\n        };\n\n        if (selectedVideoID) {\n            fetchVideoData();\n        }\n    }, [selectedVideoID]);\n\n    const videoKey = selectedVideoID ? `video-${selectedVideoID}` : \"\";\n\n    return (\n        <div className=\"main_vid\">\n            <div className=\"play_area\">\n                <video\n                    className=\"play_area\"\n                    width=\"1000\"\n                    height=\"500\"\n                    controls\n                    key={videoKey}\n                >\n                    {selectedVideo && <source src={selectedVideo} type=\"video/mp4\" />}\n                    {subtitles.length === 0 && <p>No subtitles available.</p>}\n                    {subtitles.map((subtitle, index) => (\n                        <track\n                            key={index}\n                            src={subtitle.subtitle_file_url}\n                            label={subtitle.language}\n                            kind=\"subtitles\"\n                            srcLang={subtitle.language}\n                            default={index === 0} // Set first subtitle as default\n                        />\n                    ))}\n                    Your browser does not support the video tag.\n                </video>\n            </div>\n            <header className=\"title-playing\">{displayTitle}</header>\n        </div>\n    );\n}\n\nexport default Vid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}